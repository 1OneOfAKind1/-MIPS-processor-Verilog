
//control unit
module control_unit( IFID, RegDst,Jump,Branch,MemRead,MemtoReg,AluOp,MemWrite,ALUSrc,RegWrite);

output reg RegDst,Jump,Branch,MemRead,MemtoReg,MemWrite,ALUSrc,RegWrite;
output reg [1:0] AluOp;
input wire [31:0] IFID ;
parameter [5:0] RFormat = 6'b000000 , lw = 6'b100011 , sw = 6'b101011 , beq =6'b000100 , j = 6'b000010 ; //op codes

always @(IFID)
begin
case (IFID[31:26])
	RFormat: begin
		 RegDst <= 1;
		 Jump <= 0;
		 Branch <= 0;
		 MemRead <= 0;
		 MemtoReg <= 0;
		 AluOp <= 2'b10;
		 MemWrite <= 0;
		 ALUSrc <= 0;
		 RegWrite <= 1;
		 end

	lw:      begin
		 RegDst <= 0;
		 Jump <= 0;
		 Branch <= 0;
		 MemRead <= 1;
		 MemtoReg <= 1;
		 AluOp <= 2'b00;
		 MemWrite <= 0;
		 ALUSrc <= 1;
		 RegWrite <= 1;
		 end

	sw:	 begin
		 RegDst <= 1'bx;
		 Jump <= 0;
		 Branch <= 0;
		 MemRead <= 0;
		 MemtoReg <= 1'bx; 
		 AluOp <= 2'b00;
		 MemWrite <= 1;
		 ALUSrc <= 1;
		 RegWrite <= 0;
		 end

	beq: 	 begin
		 RegDst <= 1'bx; 
		 Jump <= 0;
		 Branch <= 1;
		 MemRead <= 0;
		 MemtoReg <= 1'bx; 
		 AluOp <= 2'b01;
		 MemWrite <= 0;
		 ALUSrc <= 0;
		 RegWrite <= 0;
		 end

	j: 	 begin
		 RegDst <= 1'bx; 
		 Jump <= 1;
		 Branch <= 0;
		 MemRead <= 0;
		 MemtoReg <= 1'bx;
		 AluOp = 2'bxx;
		 MemWrite <= 0;
		 ALUSrc = 1'bx;
		 RegWrite <= 0;
		 end
endcase
end

endmodule

module tbCU();
reg[31:0] IF;
wire RegDST,Jump,Branch,MemRead,MemtoReg,MemWrite,ALUSrc,RegWrite;
wire [1:0] ALUOp;


initial
begin
$monitor($time,,"%b %b %b %b %b %b %b %b %b %b",IF,RegDST,ALUSrc,MemtoReg,RegWrite,MemRead,MemWrite,Branch,ALUOp,Jump);

IF<= 32'b0000_0000_0000_0000_0000_0000_0000_0000;

#5
IF<= 32'b1000_1100_0000_0000_0000_0000_0000_0000;

#5
IF<= 32'b1010_1100_0000_0000_0000_0000_0000_0000;

#5
IF<= 32'b0001_0000_0000_0000_0000_0000_0000_0000;

#5
IF<= 32'b0000_1000_0000_0000_0000_0000_0000_0000;
end
control_unit cu(IF,RegDST,Jump,Branch,MemRead,MemtoReg,ALUOp,MemWrite,ALUSrc,RegWrite);

endmodule

		 